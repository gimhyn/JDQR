1. DuckDNS로 서버 도메인 생성
2. NginX 설치
    - sudo apt update
    - sudo apt install nginx
3. NginX가 리버스 프록시 역할을 수행하도록 conf파일 작성
    - sudo vi /etc/nginx/conf.d/jdqr.conf
        - /etc/nginx/nginx.conf 파일안에 include /etc/nginx/conf.d/*.conf;가 있어서 conf.d 디렉토리 안에 nginx설정 파일 추가하면 반영됨
    
    ```
    server {
  listen 80; # 80포트로 받을 때
  server_name jdqr608.duckdns.org; # 도메인주소
  return 301 https://jdqr608.duckdns.org$request_uri;

  location /project/be-release {
		proxy_pass http://localhost:9090/project/be-release;   # Jenkins 서버 주소와 포트
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
	}
}

server {
  listen 443 ssl http2;
  server_name jdqr608.duckdns.org;

  # ssl 인증서 적용하기
  ssl_certificate /etc/letsencrypt/live/jdqr608-duckdns-org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/jdqr608-duckdns-org/privkey.pem;

  location /api/v1 {
    proxy_pass http://localhost:8080/api/v1; 
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    
  }

  # WebSocket 설정
  location /ws {
      proxy_pass http://localhost:8080/ws;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      add_header Access-Control-Allow-Origin "http://localhost:3000";
      add_header Access-Control-Allow-Credentials "true";
  }

  location /v3 { 
    proxy_pass http://localhost:8080/v3;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location / {
    root /usr/share/nginx/html/build;
    try_files $uri $uri/ /index.html;
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
  }
}
    ```
    
4. NginX 재시작
    - sudo nginx -t
    - sudo service nginx restart
5. 방화벽 설정 확인하기
    - sudo ufw allow ‘Nginx Full’
6. SSL 인증서 설정
    - sudo apt install certbot python3-certbot-nginx
    - sudo certbot --nginx -d [your-domain.com](http://your-domain.com/)
        - 도메인이 duckdns로 생성한 것이라 도메인 이름에 인증서 경로로 사용할 수 없는 문자가 포함되었다는 에러가 발생 ⇒ --cert-name 옵션으로 다시 수행
    - sudo certbot --nginx -d jdqr608.duckdns.org --cert-name jdqr608-duckdns-org
