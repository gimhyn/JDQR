plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 기본설정들. JPA,devtool,test를위한 junit
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MySQL 설정
	runtimeOnly 'com.mysql:mysql-connector-j'

	// lombok 설정
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'  // 테스트 코드에서 Lombok 사용
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'  // 테스트 코드에서 어노테이션 처리

	// validation을 위한 의존성 추가
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.0'

	// QueryDSL 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	testRuntimeOnly 'com.h2database:h2' // 테스트 시 h2사용

	// mongoDB 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

tasks.named('test') {
	useJUnitPlatform()
}
